#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <10 11>;
        };

        esc {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
        };

        single_quote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <7 8>;
        };

        double_quote {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <19 20>;
        };

        back_quote {
            bindings = <&kp GRAVE>;
            key-positions = <31 32>;
        };

        brackets {
            bindings = <&brackets>;
            key-positions = <12 11>;
            layers = <0>;
        };

        parenthesis {
            bindings = <&parenthesis>;
            key-positions = <2 1>;
        };

        braces {
            bindings = <&braces>;
            key-positions = <24 23>;
        };

        lgts {
            bindings = <&lgts>;
            key-positions = <36 35>;
        };

        bracket {
            bindings = <&bracket>;
            key-positions = <12 11>;
            layers = <2>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        brackets: brackets {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp RIGHT_BRACKET>;
            label = "BRACKETS";
        };

        braces: braces {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE &kp RIGHT_BRACE>;
            label = "BRACES";
        };

        parenthesis: parthens {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS>;
            label = "PARTHENS";
        };

        lgts: lgts {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LESS_THAN &kp GREATER_THAN>;
            label = "LGTS";
        };

        cmd_space: cmd_space {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(SPACE)>;
            label = "CMD_SPACE";
        };

        bracket: bracket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG2 &kp LEFT_BRACKET>;
            label = "BRACKET";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W   &kp E         &kp R                   &kp T                                  &kp Y        &kp U  &kp I      &kp O       &kp P
&mt LCTRL A       &kp S   &kp D         &kp F                   &kp G  &msc SCRL_DOWN      &cmd_space  &kp H        &kp J  &kp K      &kp L       &mt RCTRL MINUS
&mt LEFT_SHIFT Z  &kp X   &kp C         &kp V                   &kp B  &msc SCRL_UP        &trans      &kp N        &kp M  &kp COMMA  &kp PERIOD  &mt RIGHT_SHIFT SEMICOLON
&trans            &trans  &kp LEFT_ALT  &mt LEFT_COMMAND LANG2  &mo 2  &lt 3 SPACE         &mo 1       &lt 3 LANG1                                &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        NUM_BLE {
            bindings = <
&kp KP_MULTIPLY  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_PLUS                            &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&kp KP_DIVIDE    &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_MINUS  &kp PERCENT      &trans  &trans        &trans        &trans        &trans        &trans
&kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_EQUAL  &kp KP_DOT       &trans  &trans        &trans        &trans        &trans        &trans
&trans           &trans           &trans           &trans           &trans        &trans           &trans  &trans                                                  &bt BT_CLR
            >;
        };

        SYM {
            bindings = <
&trans  &trans    &trans     &trans  &kp TILDE                      &trans  &trans     &kp QUESTION   &kp EXCLAMATION  &trans
&kp AT  &kp HASH  &kp DLLR   &trans  &trans     &trans      &trans  &trans  &kp SLASH  &kp PIPE       &kp BACKSLASH    &trans
&trans  &trans    &kp CARET  &trans  &trans     &trans      &trans  &trans  &trans     &kp AMPERSAND  &trans           &trans
&trans  &trans    &trans     &trans  &trans     &trans      &trans  &trans                                             &trans
            >;
        };

        ARROW {
            bindings = <
&trans  &trans    &trans    &trans     &trans                                 &trans         &trans    &trans    &trans     &trans
&trans  &kp LEFT  &kp UP    &kp RIGHT  &trans  &kp C_VOL_UP           &trans  &kp BACKSPACE  &kp LEFT  &kp UP    &kp RIGHT  &trans
&trans  &trans    &kp DOWN  &trans     &trans  &kp C_VOLUME_DOWN      &trans  &trans         &trans    &kp DOWN  &trans     &trans
&trans  &trans    &trans    &trans     &trans  &kp ENTER              &trans  &trans                                        &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mo 5   &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                              &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
