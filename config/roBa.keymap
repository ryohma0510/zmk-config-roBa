#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&sl { release-after-ms = <180>; };

/ {
    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESC>;
            key-positions = <1 2>;
            layers = <0>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        cmd_space: cmd_space {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(SPACE)>;
            label = "CMD_SPACE";
        };

        screenshot: screenshot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(NUMBER_4))>;
            label = "SCREENSHOT";
        };

        macro_left_click: macro_left_click {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mkp LCLK>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mkp LCLK>,
                <&macro_tap>,
                <&tog_off 4 &sl 4>;

            label = "MACRO_LEFT_CLICK";
        };

        double_click: double_click {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mkp MB1 &mkp MB1>;
            label = "DOUBLE_CLICK";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        tog_off: toggle_layer_off_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer Off";
            toggle-mode = "off";
        };

        left_click: left_click {
            compatible = "zmk,behavior-tap-dance";
            label = "LEFT_CLICK";
            #binding-cells = <0>;
            bindings = <&lt 5 J>, <&mkp MB1>, <&double_click>;
        };

        right_click: right_click {
            compatible = "zmk,behavior-tap-dance";
            label = "RIGHT_CLICK";
            #binding-cells = <0>;
            bindings = <&kp L>, <&mkp MB2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W   &kp E         &kp R                   &kp T                                  &kp Y        &kp U        &kp I      &kp O         &kp P
&mt LCTRL A       &kp S   &kp D         &kp F                   &kp G  &msc SCRL_DOWN      &cmd_space  &kp H        &left_click  &kp K      &right_click  &mt RCTRL MINUS
&mt LEFT_SHIFT Z  &kp X   &kp C         &kp V                   &kp B  &msc SCRL_UP        &none       &kp N        &kp M        &kp COMMA  &kp PERIOD    &mt RIGHT_SHIFT SINGLE_QUOTE
&trans            &trans  &kp LEFT_ALT  &mt LEFT_COMMAND LANG2  &mo 2  &kp SPACE           &mo 1       &lt 3 LANG1                                        &kp GRAVE
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        NUM_BLE {
            bindings = <
&kp KP_MULTIPLY  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_PLUS                            &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&kp KP_DIVIDE    &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_MINUS  &kp PERCENT      &trans  &trans        &trans        &trans        &trans        &trans
&kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_EQUAL  &kp KP_DOT       &trans  &trans        &trans        &trans        &trans        &trans
&trans           &trans           &trans           &trans           &trans        &trans           &trans  &trans                                                  &bt BT_CLR
            >;
        };

        SYM {
            bindings = <
&trans  &trans    &kp SEMICOLON  &kp COLON             &kp TILDE                                  &trans            &trans             &kp QUESTION  &kp EXCLAMATION  &kp PERCENT
&kp AT  &kp HASH  &kp DLLR       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans      &trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SLASH     &kp PIPE         &kp BACKSLASH
&trans  &trans    &kp CARET      &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans      &trans  &kp LESS_THAN     &kp GREATER_THAN   &trans        &kp AMPERSAND    &trans
&trans  &trans    &trans         &trans                &trans                 &trans      &trans  &trans                                                              &trans
            >;
        };

        ARROW {
            bindings = <
&trans  &trans    &trans    &trans     &trans                                 &trans         &mkp MB4         &trans    &mkp MB5     &trans
&trans  &kp LEFT  &kp UP    &kp RIGHT  &trans  &kp C_VOLUME_UP        &trans  &kp BACKSPACE  &kp LEFT         &kp UP    &kp RIGHT    &trans
&trans  &trans    &kp DOWN  &trans     &trans  &kp C_VOLUME_DOWN      &trans  &trans         &kp LC(LS(TAB))  &kp DOWN  &kp LC(TAB)  &trans
&trans  &trans    &trans    &trans     &trans  &kp ENTER              &trans  &trans                                                 &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &trans  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                              &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        PAIR {
            bindings = <
&trans  &kp LS(LPAR)  &kp LS(RPAR)  &trans  &trans                           &trans  &trans   &trans       &trans     &trans
&trans  &kp LS(LBRC)  &kp LS(RBRC)  &trans  &trans  &trans      &trans       &trans  &kp SQT  &kp LS(DQT)  &kp GRAVE  &trans
&trans  &kp LBKT      &kp RBKT      &trans  &trans  &trans      &bootloader  &trans  &trans   &trans       &trans     &trans
&trans  &kp LS(LT)    &kp LS(GT)    &trans  &trans  &trans      &trans       &trans                                   &trans
            >;
        };
    };
};
