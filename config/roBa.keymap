#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <input/processors.dtsi>

#define MOUSE 4
#define SCROLL 5
#define NUM 6
#define MOUSESLOW 7

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESC>;
            key-positions = <1 2>;
            layers = <0>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        right_click {
            bindings = <&mkp MB2>;
            key-positions = <19 18>;
        };

        s_d_quote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <19 20>;
        };

        b_quote {
            bindings = <&kp GRAVE>;
            key-positions = <31 32>;
        };
    };

    macros {
        screenshot: screenshot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(NUMBER_4))>;
            label = "SCREENSHOT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W   &kp E         &kp R                   &kp T                        &kp Y        &kp U     &kp I      &kp O       &kp P
&mt LCTRL A       &kp S   &kp D         &kp F                   &kp G  &none          &none  &kp H        &mkp MB1  &kp K      &kp L       &mt RCTRL J
&mt LEFT_SHIFT Z  &kp X   &kp C         &kp V                   &kp B  &none          &none  &kp N        &lt 5 M   &kp COMMA  &kp PERIOD  &mt RIGHT_SHIFT MINUS
&trans            &trans  &kp LEFT_ALT  &mt LEFT_COMMAND LANG2  &mo 7  &kp SPACE      &mo 2  &lt 3 LANG1                                   &screenshot
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        NUM_BLE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                                  &bt BT_CLR
            >;
        };

        SYM {
            bindings = <
&trans  &trans    &kp SEMICOLON  &kp COLON             &kp TILDE                                  &trans            &trans             &kp QUESTION  &kp EXCLAMATION  &kp PERCENT
&kp AT  &kp HASH  &kp DLLR       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans      &trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SLASH     &kp PIPE         &kp BACKSLASH
&trans  &trans    &kp CARET      &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans      &trans  &kp LESS_THAN     &kp GREATER_THAN   &trans        &kp AMPERSAND    &trans
&trans  &trans    &trans         &trans                &trans                 &trans      &trans  &trans                                                              &trans
            >;
        };

        ARROW {
            bindings = <
&kp KP_MULTIPLY             &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_PLUS                            &trans         &mkp MB4         &trans    &mkp MB5     &bt BT_SEL 0
&kp KP_DIVIDE               &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_MINUS  &kp PERCENT      &trans  &kp BACKSPACE  &kp LEFT         &kp UP    &kp RIGHT    &trans
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_EQUAL  &kp KP_DOT       &trans  &trans         &kp LC(LS(TAB))  &kp DOWN  &kp LC(TAB)  &trans
&trans                      &trans           &trans           &trans           &trans        &kp ENTER        &trans  &trans                                                 &bt BT_SEL 4
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &trans  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mo 5     &trans  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                              &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        PAIR {
            bindings = <
&trans  &kp LS(LPAR)  &kp LS(RPAR)  &trans  &trans                           &trans  &trans   &trans       &trans     &trans
&trans  &kp LS(LBRC)  &kp LS(RBRC)  &trans  &trans  &trans      &trans       &trans  &kp SQT  &kp LS(DQT)  &kp GRAVE  &trans
&trans  &kp LBKT      &kp RBKT      &trans  &trans  &trans      &bootloader  &trans  &trans   &trans       &trans     &trans
&trans  &kp LS(LT)    &kp LS(GT)    &trans  &trans  &trans      &trans       &trans                                   &trans
            >;
        };

        MOUSESLOW {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };
    };
};
